@import "tailwindcss";

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

.stack-scope *,
.stack-scope ::before,
.stack-scope ::after,
*.stack-scope,
.stack-scope::before,
.stack-scope::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}
.stack-scope ::backdrop,
.stack-scope::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}
/*
! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
*/
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
.stack-scope *,
.stack-scope ::before,
.stack-scope ::after,
*.stack-scope,
.stack-scope::before,
.stack-scope::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}
.stack-scope ::before,
.stack-scope ::after,
.stack-scope::before,
.stack-scope::after {
  --tw-content: "";
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
.stack-scope html,
.stack-scope :host,
html.stack-scope,
.stack-scope:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
.stack-scope body,
body.stack-scope {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
.stack-scope hr,
hr.stack-scope {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
.stack-scope abbr:where([title]),
abbr.stack-scope:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
.stack-scope h1,
.stack-scope h2,
.stack-scope h3,
.stack-scope h4,
.stack-scope h5,
.stack-scope h6,
h1.stack-scope,
h2.stack-scope,
h3.stack-scope,
h4.stack-scope,
h5.stack-scope,
h6.stack-scope {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
.stack-scope a,
a.stack-scope {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
.stack-scope b,
.stack-scope strong,
b.stack-scope,
strong.stack-scope {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
.stack-scope code,
.stack-scope kbd,
.stack-scope samp,
.stack-scope pre,
code.stack-scope,
kbd.stack-scope,
samp.stack-scope,
pre.stack-scope {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}
/*
Add the correct font size in all browsers.
*/
.stack-scope small,
small.stack-scope {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
.stack-scope sub,
.stack-scope sup,
sub.stack-scope,
sup.stack-scope {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.stack-scope sub,
sub.stack-scope {
  bottom: -0.25em;
}
.stack-scope sup,
sup.stack-scope {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
.stack-scope table,
table.stack-scope {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
.stack-scope button,
.stack-scope input,
.stack-scope optgroup,
.stack-scope select,
.stack-scope textarea,
button.stack-scope,
input.stack-scope,
optgroup.stack-scope,
select.stack-scope,
textarea.stack-scope {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
.stack-scope button,
.stack-scope select,
button.stack-scope,
select.stack-scope {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
.stack-scope button,
.stack-scope input:where([type="button"]),
.stack-scope input:where([type="reset"]),
.stack-scope input:where([type="submit"]),
button.stack-scope,
input.stack-scope:where([type="button"]),
input.stack-scope:where([type="reset"]),
input.stack-scope:where([type="submit"]) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
.stack-scope :-moz-focusring,
.stack-scope:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
.stack-scope :-moz-ui-invalid,
.stack-scope:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
.stack-scope progress,
progress.stack-scope {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
.stack-scope ::-webkit-inner-spin-button,
.stack-scope ::-webkit-outer-spin-button,
.stack-scope::-webkit-inner-spin-button,
.stack-scope::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
.stack-scope [type="search"],
[type="search"] .stack-scope {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
.stack-scope ::-webkit-search-decoration,
.stack-scope::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
.stack-scope ::-webkit-file-upload-button,
.stack-scope::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
.stack-scope summary,
summary.stack-scope {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
.stack-scope blockquote,
.stack-scope dl,
.stack-scope dd,
.stack-scope h1,
.stack-scope h2,
.stack-scope h3,
.stack-scope h4,
.stack-scope h5,
.stack-scope h6,
.stack-scope hr,
.stack-scope figure,
.stack-scope p,
.stack-scope pre,
blockquote.stack-scope,
dl.stack-scope,
dd.stack-scope,
h1.stack-scope,
h2.stack-scope,
h3.stack-scope,
h4.stack-scope,
h5.stack-scope,
h6.stack-scope,
hr.stack-scope,
figure.stack-scope,
p.stack-scope,
pre.stack-scope {
  margin: 0;
}
.stack-scope fieldset,
fieldset.stack-scope {
  margin: 0;
  padding: 0;
}
.stack-scope legend,
legend.stack-scope {
  padding: 0;
}
.stack-scope ol,
.stack-scope ul,
.stack-scope menu,
ol.stack-scope,
ul.stack-scope,
menu.stack-scope {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Reset default styling for dialogs.
*/
.stack-scope dialog,
dialog.stack-scope {
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
.stack-scope textarea,
textarea.stack-scope {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
.stack-scope input::-moz-placeholder,
.stack-scope textarea::-moz-placeholder,
input.stack-scope::-moz-placeholder,
textarea.stack-scope::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}
.stack-scope input::placeholder,
.stack-scope textarea::placeholder,
input.stack-scope::placeholder,
textarea.stack-scope::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}
/*
Set the default cursor for buttons.
*/
.stack-scope button,
.stack-scope [role="button"],
button.stack-scope,
[role="button"] .stack-scope {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
.stack-scope :disabled,
.stack-scope:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
.stack-scope img,
.stack-scope svg,
.stack-scope video,
.stack-scope canvas,
.stack-scope audio,
.stack-scope iframe,
.stack-scope embed,
.stack-scope object,
img.stack-scope,
svg.stack-scope,
video.stack-scope,
canvas.stack-scope,
audio.stack-scope,
iframe.stack-scope,
embed.stack-scope,
object.stack-scope {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
.stack-scope img,
.stack-scope video,
img.stack-scope,
video.stack-scope {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
.stack-scope [hidden]:where(:not([hidden="until-found"])),
[hidden] .stack-scope:where(:not([hidden="until-found"])) {
  display: none;
}
.stack-scope .sr-only,
.stack-scope.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.stack-scope .pointer-events-none,
.stack-scope.pointer-events-none {
  pointer-events: none;
}
.stack-scope .pointer-events-auto,
.stack-scope.pointer-events-auto {
  pointer-events: auto;
}
.stack-scope .visible,
.stack-scope.visible {
  visibility: visible;
}
.stack-scope .invisible,
.stack-scope.invisible {
  visibility: hidden;
}
.stack-scope .static,
.stack-scope.static {
  position: static;
}
.stack-scope .fixed,
.stack-scope.fixed {
  position: fixed;
}
.stack-scope .absolute,
.stack-scope.absolute {
  position: absolute;
}
.stack-scope .relative,
.stack-scope.relative {
  position: relative;
}
.stack-scope .inset-0,
.stack-scope.inset-0 {
  inset: 0px;
}
.stack-scope .inset-x-0,
.stack-scope.inset-x-0 {
  left: 0px;
  right: 0px;
}
.stack-scope .inset-y-0,
.stack-scope.inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.stack-scope .-right-2,
.stack-scope.-right-2 {
  right: -0.5rem;
}
.stack-scope .-top-2,
.stack-scope.-top-2 {
  top: -0.5rem;
}
.stack-scope .bottom-0,
.stack-scope.bottom-0 {
  bottom: 0px;
}
.stack-scope .left-0,
.stack-scope.left-0 {
  left: 0px;
}
.stack-scope .left-1,
.stack-scope.left-1 {
  left: 0.25rem;
}
.stack-scope .left-2,
.stack-scope.left-2 {
  left: 0.5rem;
}
.stack-scope .left-\[50\%\],
.stack-scope.left-\[50\%\] {
  left: 50%;
}
.stack-scope .right-0,
.stack-scope.right-0 {
  right: 0px;
}
.stack-scope .right-1,
.stack-scope.right-1 {
  right: 0.25rem;
}
.stack-scope .right-2,
.stack-scope.right-2 {
  right: 0.5rem;
}
.stack-scope .right-4,
.stack-scope.right-4 {
  right: 1rem;
}
.stack-scope .top-0,
.stack-scope.top-0 {
  top: 0px;
}
.stack-scope .top-1,
.stack-scope.top-1 {
  top: 0.25rem;
}
.stack-scope .top-2,
.stack-scope.top-2 {
  top: 0.5rem;
}
.stack-scope .top-4,
.stack-scope.top-4 {
  top: 1rem;
}
.stack-scope .top-\[1px\],
.stack-scope.top-\[1px\] {
  top: 1px;
}
.stack-scope .top-\[50\%\],
.stack-scope.top-\[50\%\] {
  top: 50%;
}
.stack-scope .top-\[60\%\],
.stack-scope.top-\[60\%\] {
  top: 60%;
}
.stack-scope .top-full,
.stack-scope.top-full {
  top: 100%;
}
.stack-scope .z-10,
.stack-scope.z-10 {
  z-index: 10;
}
.stack-scope .z-50,
.stack-scope.z-50 {
  z-index: 50;
}
.stack-scope .z-\[100\],
.stack-scope.z-\[100\] {
  z-index: 100;
}
.stack-scope .z-\[1\],
.stack-scope.z-\[1\] {
  z-index: 1;
}
.stack-scope .-mx-1,
.stack-scope.-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
.stack-scope .-mx-6,
.stack-scope.-mx-6 {
  margin-left: -1.5rem;
  margin-right: -1.5rem;
}
.stack-scope .mx-2,
.stack-scope.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.stack-scope .my-1,
.stack-scope.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.stack-scope .my-2,
.stack-scope.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.stack-scope .my-5,
.stack-scope.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}
.stack-scope .my-6,
.stack-scope.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
.stack-scope .-ml-3,
.stack-scope.-ml-3 {
  margin-left: -0.75rem;
}
.stack-scope .mb-1,
.stack-scope.mb-1 {
  margin-bottom: 0.25rem;
}
.stack-scope .mb-2,
.stack-scope.mb-2 {
  margin-bottom: 0.5rem;
}
.stack-scope .mb-4,
.stack-scope.mb-4 {
  margin-bottom: 1rem;
}
.stack-scope .mb-6,
.stack-scope.mb-6 {
  margin-bottom: 1.5rem;
}
.stack-scope .ml-1,
.stack-scope.ml-1 {
  margin-left: 0.25rem;
}
.stack-scope .ml-2,
.stack-scope.ml-2 {
  margin-left: 0.5rem;
}
.stack-scope .ml-auto,
.stack-scope.ml-auto {
  margin-left: auto;
}
.stack-scope .mr-1\.5,
.stack-scope.mr-1\.5 {
  margin-right: 0.375rem;
}
.stack-scope .mr-2,
.stack-scope.mr-2 {
  margin-right: 0.5rem;
}
.stack-scope .mr-4,
.stack-scope.mr-4 {
  margin-right: 1rem;
}
.stack-scope .mt-1,
.stack-scope.mt-1 {
  margin-top: 0.25rem;
}
.stack-scope .mt-1\.5,
.stack-scope.mt-1\.5 {
  margin-top: 0.375rem;
}
.stack-scope .mt-2,
.stack-scope.mt-2 {
  margin-top: 0.5rem;
}
.stack-scope .mt-4,
.stack-scope.mt-4 {
  margin-top: 1rem;
}
.stack-scope .mt-6,
.stack-scope.mt-6 {
  margin-top: 1.5rem;
}
.stack-scope .mt-8,
.stack-scope.mt-8 {
  margin-top: 2rem;
}
.stack-scope .box-border,
.stack-scope.box-border {
  box-sizing: border-box;
}
.stack-scope .block,
.stack-scope.block {
  display: block;
}
.stack-scope .inline,
.stack-scope.inline {
  display: inline;
}
.stack-scope .flex,
.stack-scope.flex {
  display: flex;
}
.stack-scope .inline-flex,
.stack-scope.inline-flex {
  display: inline-flex;
}
.stack-scope .\!table,
.stack-scope.\!table {
  display: table !important;
}
.stack-scope .table,
.stack-scope.table {
  display: table;
}
.stack-scope .grid,
.stack-scope.grid {
  display: grid;
}
.stack-scope .hidden,
.stack-scope.hidden {
  display: none;
}
.stack-scope .aspect-square,
.stack-scope.aspect-square {
  aspect-ratio: 1 / 1;
}
.stack-scope .h-0\.5,
.stack-scope.h-0\.5 {
  height: 0.125rem;
}
.stack-scope .h-1\.5,
.stack-scope.h-1\.5 {
  height: 0.375rem;
}
.stack-scope .h-10,
.stack-scope.h-10 {
  height: 2.5rem;
}
.stack-scope .h-2,
.stack-scope.h-2 {
  height: 0.5rem;
}
.stack-scope .h-2\.5,
.stack-scope.h-2\.5 {
  height: 0.625rem;
}
.stack-scope .h-24,
.stack-scope.h-24 {
  height: 6rem;
}
.stack-scope .h-3,
.stack-scope.h-3 {
  height: 0.75rem;
}
.stack-scope .h-3\.5,
.stack-scope.h-3\.5 {
  height: 0.875rem;
}
.stack-scope .h-4,
.stack-scope.h-4 {
  height: 1rem;
}
.stack-scope .h-5,
.stack-scope.h-5 {
  height: 1.25rem;
}
.stack-scope .h-6,
.stack-scope.h-6 {
  height: 1.5rem;
}
.stack-scope .h-7,
.stack-scope.h-7 {
  height: 1.75rem;
}
.stack-scope .h-8,
.stack-scope.h-8 {
  height: 2rem;
}
.stack-scope .h-9,
.stack-scope.h-9 {
  height: 2.25rem;
}
.stack-scope .h-\[1px\],
.stack-scope.h-\[1px\] {
  height: 1px;
}
.stack-scope .h-\[200px\],
.stack-scope.h-\[200px\] {
  height: 200px;
}
.stack-scope .h-\[300px\],
.stack-scope.h-\[300px\] {
  height: 300px;
}
.stack-scope .h-\[34px\],
.stack-scope.h-\[34px\] {
  height: 34px;
}
.stack-scope .h-\[60px\],
.stack-scope.h-\[60px\] {
  height: 60px;
}
.stack-scope .h-\[var\(--radix-navigation-menu-viewport-height\)\],
.stack-scope.h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}
.stack-scope .h-\[var\(--radix-select-trigger-height\)\],
.stack-scope.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.stack-scope .h-full,
.stack-scope.h-full {
  height: 100%;
}
.stack-scope .h-px,
.stack-scope.h-px {
  height: 1px;
}
.stack-scope .max-h-6,
.stack-scope.max-h-6 {
  max-height: 1.5rem;
}
.stack-scope .max-h-96,
.stack-scope.max-h-96 {
  max-height: 24rem;
}
.stack-scope .max-h-\[300px\],
.stack-scope.max-h-\[300px\] {
  max-height: 300px;
}
.stack-scope .max-h-screen,
.stack-scope.max-h-screen {
  max-height: 100vh;
}
.stack-scope .min-h-6,
.stack-scope.min-h-6 {
  min-height: 1.5rem;
}
.stack-scope .min-h-\[60px\],
.stack-scope.min-h-\[60px\] {
  min-height: 60px;
}
.stack-scope .w-0,
.stack-scope.w-0 {
  width: 0px;
}
.stack-scope .w-10,
.stack-scope.w-10 {
  width: 2.5rem;
}
.stack-scope .w-16,
.stack-scope.w-16 {
  width: 4rem;
}
.stack-scope .w-2,
.stack-scope.w-2 {
  width: 0.5rem;
}
.stack-scope .w-2\.5,
.stack-scope.w-2\.5 {
  width: 0.625rem;
}
.stack-scope .w-2\/3,
.stack-scope.w-2\/3 {
  width: 66.666667%;
}
.stack-scope .w-24,
.stack-scope.w-24 {
  width: 6rem;
}
.stack-scope .w-3,
.stack-scope.w-3 {
  width: 0.75rem;
}
.stack-scope .w-3\.5,
.stack-scope.w-3\.5 {
  width: 0.875rem;
}
.stack-scope .w-3\/4,
.stack-scope.w-3\/4 {
  width: 75%;
}
.stack-scope .w-4,
.stack-scope.w-4 {
  width: 1rem;
}
.stack-scope .w-48,
.stack-scope.w-48 {
  width: 12rem;
}
.stack-scope .w-5,
.stack-scope.w-5 {
  width: 1.25rem;
}
.stack-scope .w-6,
.stack-scope.w-6 {
  width: 1.5rem;
}
.stack-scope .w-64,
.stack-scope.w-64 {
  width: 16rem;
}
.stack-scope .w-7,
.stack-scope.w-7 {
  width: 1.75rem;
}
.stack-scope .w-72,
.stack-scope.w-72 {
  width: 18rem;
}
.stack-scope .w-8,
.stack-scope.w-8 {
  width: 2rem;
}
.stack-scope .w-9,
.stack-scope.w-9 {
  width: 2.25rem;
}
.stack-scope .w-\[100px\],
.stack-scope.w-\[100px\] {
  width: 100px;
}
.stack-scope .w-\[150px\],
.stack-scope.w-\[150px\] {
  width: 150px;
}
.stack-scope .w-\[1px\],
.stack-scope.w-\[1px\] {
  width: 1px;
}
.stack-scope .w-\[200px\],
.stack-scope.w-\[200px\] {
  width: 200px;
}
.stack-scope .w-\[250px\],
.stack-scope.w-\[250px\] {
  width: 250px;
}
.stack-scope .w-\[34px\],
.stack-scope.w-\[34px\] {
  width: 34px;
}
.stack-scope .w-\[36px\],
.stack-scope.w-\[36px\] {
  width: 36px;
}
.stack-scope .w-\[60px\],
.stack-scope.w-\[60px\] {
  width: 60px;
}
.stack-scope .w-\[70px\],
.stack-scope.w-\[70px\] {
  width: 70px;
}
.stack-scope .w-\[800px\],
.stack-scope.w-\[800px\] {
  width: 800px;
}
.stack-scope .w-\[80px\],
.stack-scope.w-\[80px\] {
  width: 80px;
}
.stack-scope .w-\[calc\(100\%\+3rem\)\],
.stack-scope.w-\[calc\(100\%\+3rem\)\] {
  width: calc(100% + 3rem);
}
.stack-scope .w-fit,
.stack-scope.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.stack-scope .w-full,
.stack-scope.w-full {
  width: 100%;
}
.stack-scope .w-max,
.stack-scope.w-max {
  width: -moz-max-content;
  width: max-content;
}
.stack-scope .w-px,
.stack-scope.w-px {
  width: 1px;
}
.stack-scope .min-w-6,
.stack-scope.min-w-6 {
  min-width: 1.5rem;
}
.stack-scope .min-w-\[12rem\],
.stack-scope.min-w-\[12rem\] {
  min-width: 12rem;
}
.stack-scope .min-w-\[150px\],
.stack-scope.min-w-\[150px\] {
  min-width: 150px;
}
.stack-scope .min-w-\[200px\],
.stack-scope.min-w-\[200px\] {
  min-width: 200px;
}
.stack-scope .min-w-\[8rem\],
.stack-scope.min-w-\[8rem\] {
  min-width: 8rem;
}
.stack-scope .min-w-\[var\(--radix-select-trigger-width\)\],
.stack-scope.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
.stack-scope .max-w-40,
.stack-scope.max-w-40 {
  max-width: 10rem;
}
.stack-scope .max-w-6,
.stack-scope.max-w-6 {
  max-width: 1.5rem;
}
.stack-scope .max-w-60,
.stack-scope.max-w-60 {
  max-width: 15rem;
}
.stack-scope .max-w-64,
.stack-scope.max-w-64 {
  max-width: 16rem;
}
.stack-scope .max-w-\[200px\],
.stack-scope.max-w-\[200px\] {
  max-width: 200px;
}
.stack-scope .max-w-\[300px\],
.stack-scope.max-w-\[300px\] {
  max-width: 300px;
}
.stack-scope .max-w-\[320px\],
.stack-scope.max-w-\[320px\] {
  max-width: 320px;
}
.stack-scope .max-w-\[36px\],
.stack-scope.max-w-\[36px\] {
  max-width: 36px;
}
.stack-scope .max-w-\[380px\],
.stack-scope.max-w-\[380px\] {
  max-width: 380px;
}
.stack-scope .max-w-\[800px\],
.stack-scope.max-w-\[800px\] {
  max-width: 800px;
}
.stack-scope .max-w-full,
.stack-scope.max-w-full {
  max-width: 100%;
}
.stack-scope .max-w-lg,
.stack-scope.max-w-lg {
  max-width: 32rem;
}
.stack-scope .max-w-max,
.stack-scope.max-w-max {
  max-width: -moz-max-content;
  max-width: max-content;
}
.stack-scope .flex-1,
.stack-scope.flex-1 {
  flex: 1 1 0%;
}
.stack-scope .flex-shrink-0,
.stack-scope.flex-shrink-0 {
  flex-shrink: 0;
}
.stack-scope .shrink-0,
.stack-scope.shrink-0 {
  flex-shrink: 0;
}
.stack-scope .flex-grow,
.stack-scope.flex-grow {
  flex-grow: 1;
}
.stack-scope .grow,
.stack-scope.grow {
  flex-grow: 1;
}
.stack-scope .caption-bottom,
.stack-scope.caption-bottom {
  caption-side: bottom;
}
.stack-scope .border-collapse,
.stack-scope.border-collapse {
  border-collapse: collapse;
}
.stack-scope .translate-x-\[-50\%\],
.stack-scope.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .translate-y-\[-50\%\],
.stack-scope.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .rotate-45,
.stack-scope.rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .transform,
.stack-scope.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
.stack-scope .animate-pulse,
.stack-scope.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.stack-scope .animate-spin,
.stack-scope.animate-spin {
  animation: spin 1s linear infinite;
}
.stack-scope .cursor-default,
.stack-scope.cursor-default {
  cursor: default;
}
.stack-scope .cursor-not-allowed,
.stack-scope.cursor-not-allowed {
  cursor: not-allowed;
}
.stack-scope .cursor-pointer,
.stack-scope.cursor-pointer {
  cursor: pointer;
}
.stack-scope .cursor-wait,
.stack-scope.cursor-wait {
  cursor: wait;
}
.stack-scope .touch-none,
.stack-scope.touch-none {
  touch-action: none;
}
.stack-scope .select-none,
.stack-scope.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.stack-scope .resize,
.stack-scope.resize {
  resize: both;
}
.stack-scope .list-none,
.stack-scope.list-none {
  list-style-type: none;
}
.stack-scope .flex-row,
.stack-scope.flex-row {
  flex-direction: row;
}
.stack-scope .flex-row-reverse,
.stack-scope.flex-row-reverse {
  flex-direction: row-reverse;
}
.stack-scope .flex-col,
.stack-scope.flex-col {
  flex-direction: column;
}
.stack-scope .flex-col-reverse,
.stack-scope.flex-col-reverse {
  flex-direction: column-reverse;
}
.stack-scope .flex-wrap,
.stack-scope.flex-wrap {
  flex-wrap: wrap;
}
.stack-scope .items-end,
.stack-scope.items-end {
  align-items: flex-end;
}
.stack-scope .items-center,
.stack-scope.items-center {
  align-items: center;
}
.stack-scope .items-stretch,
.stack-scope.items-stretch {
  align-items: stretch;
}
.stack-scope .justify-start,
.stack-scope.justify-start {
  justify-content: flex-start;
}
.stack-scope .justify-end,
.stack-scope.justify-end {
  justify-content: flex-end;
}
.stack-scope .justify-center,
.stack-scope.justify-center {
  justify-content: center;
}
.stack-scope .justify-between,
.stack-scope.justify-between {
  justify-content: space-between;
}
.stack-scope .justify-evenly,
.stack-scope.justify-evenly {
  justify-content: space-evenly;
}
.stack-scope .gap-1,
.stack-scope.gap-1 {
  gap: 0.25rem;
}
.stack-scope .gap-1\.5,
.stack-scope.gap-1\.5 {
  gap: 0.375rem;
}
.stack-scope .gap-2,
.stack-scope.gap-2 {
  gap: 0.5rem;
}
.stack-scope .gap-4,
.stack-scope.gap-4 {
  gap: 1rem;
}
.stack-scope .gap-6,
.stack-scope.gap-6 {
  gap: 1.5rem;
}
.stack-scope .gap-x-6,
.stack-scope.gap-x-6 {
  -moz-column-gap: 1.5rem;
  column-gap: 1.5rem;
}
.stack-scope .gap-y-4,
.stack-scope.gap-y-4 {
  row-gap: 1rem;
}
.stack-scope .space-x-1 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.stack-scope .space-x-2 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.stack-scope .space-y-1 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}
.stack-scope .space-y-1\.5 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}
.stack-scope .space-y-2 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.stack-scope .space-y-4 > :not([hidden]) ~ :not([hidden]),
.stack-scope.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.stack-scope .self-center,
.stack-scope.self-center {
  align-self: center;
}
.stack-scope .self-stretch,
.stack-scope.self-stretch {
  align-self: stretch;
}
.stack-scope .overflow-auto,
.stack-scope.overflow-auto {
  overflow: auto;
}
.stack-scope .overflow-hidden,
.stack-scope.overflow-hidden {
  overflow: hidden;
}
.stack-scope .overflow-y-auto,
.stack-scope.overflow-y-auto {
  overflow-y: auto;
}
.stack-scope .overflow-x-hidden,
.stack-scope.overflow-x-hidden {
  overflow-x: hidden;
}
.stack-scope .truncate,
.stack-scope.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.stack-scope .overflow-ellipsis,
.stack-scope.overflow-ellipsis {
  text-overflow: ellipsis;
}
.stack-scope .text-ellipsis,
.stack-scope.text-ellipsis {
  text-overflow: ellipsis;
}
.stack-scope .whitespace-nowrap,
.stack-scope.whitespace-nowrap {
  white-space: nowrap;
}
.stack-scope .whitespace-pre-wrap,
.stack-scope.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.stack-scope .text-wrap,
.stack-scope.text-wrap {
  text-wrap: wrap;
}
.stack-scope .text-nowrap,
.stack-scope.text-nowrap {
  text-wrap: nowrap;
}
.stack-scope .break-words,
.stack-scope.break-words {
  overflow-wrap: break-word;
}
.stack-scope .rounded,
.stack-scope.rounded {
  border-radius: 0.25rem;
}
.stack-scope .rounded-\[inherit\],
.stack-scope.rounded-\[inherit\] {
  border-radius: inherit;
}
.stack-scope .rounded-full,
.stack-scope.rounded-full {
  border-radius: 9999px;
}
.stack-scope .rounded-lg,
.stack-scope.rounded-lg {
  border-radius: var(--radius);
}
.stack-scope .rounded-md,
.stack-scope.rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
.stack-scope .rounded-sm,
.stack-scope.rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
.stack-scope .rounded-xl,
.stack-scope.rounded-xl {
  border-radius: 0.75rem;
}
.stack-scope .rounded-b-md,
.stack-scope.rounded-b-md {
  border-bottom-right-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}
.stack-scope .rounded-l-md,
.stack-scope.rounded-l-md {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}
.stack-scope .rounded-l-none,
.stack-scope.rounded-l-none {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}
.stack-scope .rounded-tl-sm,
.stack-scope.rounded-tl-sm {
  border-top-left-radius: calc(var(--radius) - 4px);
}
.stack-scope .border,
.stack-scope.border {
  border-width: 1px;
}
.stack-scope .border-2,
.stack-scope.border-2 {
  border-width: 2px;
}
.stack-scope .border-b,
.stack-scope.border-b {
  border-bottom-width: 1px;
}
.stack-scope .border-l,
.stack-scope.border-l {
  border-left-width: 1px;
}
.stack-scope .border-r,
.stack-scope.border-r {
  border-right-width: 1px;
}
.stack-scope .border-t,
.stack-scope.border-t {
  border-top-width: 1px;
}
.stack-scope .border-border,
.stack-scope.border-border {
  border-color: hsl(var(--border));
}
.stack-scope .border-current,
.stack-scope.border-current {
  border-color: currentColor;
}
.stack-scope .border-destructive,
.stack-scope.border-destructive {
  border-color: hsl(var(--destructive));
}
.stack-scope .border-destructive\/50,
.stack-scope.border-destructive\/50 {
  border-color: hsl(var(--destructive) / 0.5);
}
.stack-scope .border-input,
.stack-scope.border-input {
  border-color: hsl(var(--input));
}
.stack-scope .border-primary,
.stack-scope.border-primary {
  border-color: hsl(var(--primary));
}
.stack-scope .border-primary\/50,
.stack-scope.border-primary\/50 {
  border-color: hsl(var(--primary) / 0.5);
}
.stack-scope .border-success,
.stack-scope.border-success {
  border-color: hsl(var(--success));
}
.stack-scope .border-success\/50,
.stack-scope.border-success\/50 {
  border-color: hsl(var(--success) / 0.5);
}
.stack-scope .border-transparent,
.stack-scope.border-transparent {
  border-color: transparent;
}
.stack-scope .border-l-transparent,
.stack-scope.border-l-transparent {
  border-left-color: transparent;
}
.stack-scope .border-t-transparent,
.stack-scope.border-t-transparent {
  border-top-color: transparent;
}
.stack-scope .bg-accent,
.stack-scope.bg-accent {
  background-color: hsl(var(--accent));
}
.stack-scope .bg-background,
.stack-scope.bg-background {
  background-color: hsl(var(--background));
}
.stack-scope .bg-black\/80,
.stack-scope.bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}
.stack-scope .bg-blue-500,
.stack-scope.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}
.stack-scope .bg-border,
.stack-scope.bg-border {
  background-color: hsl(var(--border));
}
.stack-scope .bg-card,
.stack-scope.bg-card {
  background-color: hsl(var(--card));
}
.stack-scope .bg-destructive,
.stack-scope.bg-destructive {
  background-color: hsl(var(--destructive));
}
.stack-scope .bg-destructive\/5,
.stack-scope.bg-destructive\/5 {
  background-color: hsl(var(--destructive) / 0.05);
}
.stack-scope .bg-foreground,
.stack-scope.bg-foreground {
  background-color: hsl(var(--foreground));
}
.stack-scope .bg-gray-200,
.stack-scope.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
.stack-scope .bg-gray-400,
.stack-scope.bg-gray-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(156 163 175 / var(--tw-bg-opacity));
}
.stack-scope .bg-gray-500\/20,
.stack-scope.bg-gray-500\/20 {
  background-color: rgb(107 114 128 / 0.2);
}
.stack-scope .bg-green-500,
.stack-scope.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}
.stack-scope .bg-muted,
.stack-scope.bg-muted {
  background-color: hsl(var(--muted));
}
.stack-scope .bg-muted\/50,
.stack-scope.bg-muted\/50 {
  background-color: hsl(var(--muted) / 0.5);
}
.stack-scope .bg-muted\/70,
.stack-scope.bg-muted\/70 {
  background-color: hsl(var(--muted) / 0.7);
}
.stack-scope .bg-popover,
.stack-scope.bg-popover {
  background-color: hsl(var(--popover));
}
.stack-scope .bg-primary,
.stack-scope.bg-primary {
  background-color: hsl(var(--primary));
}
.stack-scope .bg-primary\/10,
.stack-scope.bg-primary\/10 {
  background-color: hsl(var(--primary) / 0.1);
}
.stack-scope .bg-primary\/20,
.stack-scope.bg-primary\/20 {
  background-color: hsl(var(--primary) / 0.2);
}
.stack-scope .bg-red-500,
.stack-scope.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}
.stack-scope .bg-secondary,
.stack-scope.bg-secondary {
  background-color: hsl(var(--secondary));
}
.stack-scope .bg-success,
.stack-scope.bg-success {
  background-color: hsl(var(--success));
}
.stack-scope .bg-success\/5,
.stack-scope.bg-success\/5 {
  background-color: hsl(var(--success) / 0.05);
}
.stack-scope .bg-transparent,
.stack-scope.bg-transparent {
  background-color: transparent;
}
.stack-scope .bg-white,
.stack-scope.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.stack-scope .bg-yellow-500,
.stack-scope.bg-yellow-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity));
}
.stack-scope .bg-zinc-200,
.stack-scope.bg-zinc-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(228 228 231 / var(--tw-bg-opacity));
}
.stack-scope .fill-current,
.stack-scope.fill-current {
  fill: currentColor;
}
.stack-scope .fill-primary,
.stack-scope.fill-primary {
  fill: hsl(var(--primary));
}
.stack-scope .p-0,
.stack-scope.p-0 {
  padding: 0px;
}
.stack-scope .p-1,
.stack-scope.p-1 {
  padding: 0.25rem;
}
.stack-scope .p-2,
.stack-scope.p-2 {
  padding: 0.5rem;
}
.stack-scope .p-3,
.stack-scope.p-3 {
  padding: 0.75rem;
}
.stack-scope .p-4,
.stack-scope.p-4 {
  padding: 1rem;
}
.stack-scope .p-6,
.stack-scope.p-6 {
  padding: 1.5rem;
}
.stack-scope .p-\[1px\],
.stack-scope.p-\[1px\] {
  padding: 1px;
}
.stack-scope .px-1,
.stack-scope.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.stack-scope .px-2,
.stack-scope.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.stack-scope .px-2\.5,
.stack-scope.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.stack-scope .px-3,
.stack-scope.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.stack-scope .px-4,
.stack-scope.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.stack-scope .px-6,
.stack-scope.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.stack-scope .px-8,
.stack-scope.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.stack-scope .py-0\.5,
.stack-scope.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.stack-scope .py-1,
.stack-scope.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.stack-scope .py-1\.5,
.stack-scope.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.stack-scope .py-2,
.stack-scope.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.stack-scope .py-3,
.stack-scope.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.stack-scope .py-4,
.stack-scope.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.stack-scope .py-6,
.stack-scope.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.stack-scope .pb-0,
.stack-scope.pb-0 {
  padding-bottom: 0px;
}
.stack-scope .pb-2,
.stack-scope.pb-2 {
  padding-bottom: 0.5rem;
}
.stack-scope .pb-4,
.stack-scope.pb-4 {
  padding-bottom: 1rem;
}
.stack-scope .pl-2,
.stack-scope.pl-2 {
  padding-left: 0.5rem;
}
.stack-scope .pl-3,
.stack-scope.pl-3 {
  padding-left: 0.75rem;
}
.stack-scope .pl-8,
.stack-scope.pl-8 {
  padding-left: 2rem;
}
.stack-scope .pr-10,
.stack-scope.pr-10 {
  padding-right: 2.5rem;
}
.stack-scope .pr-2,
.stack-scope.pr-2 {
  padding-right: 0.5rem;
}
.stack-scope .pr-3,
.stack-scope.pr-3 {
  padding-right: 0.75rem;
}
.stack-scope .pr-6,
.stack-scope.pr-6 {
  padding-right: 1.5rem;
}
.stack-scope .pr-8,
.stack-scope.pr-8 {
  padding-right: 2rem;
}
.stack-scope .pt-0,
.stack-scope.pt-0 {
  padding-top: 0px;
}
.stack-scope .pt-1,
.stack-scope.pt-1 {
  padding-top: 0.25rem;
}
.stack-scope .pt-4,
.stack-scope.pt-4 {
  padding-top: 1rem;
}
.stack-scope .text-left,
.stack-scope.text-left {
  text-align: left;
}
.stack-scope .text-center,
.stack-scope.text-center {
  text-align: center;
}
.stack-scope .align-middle,
.stack-scope.align-middle {
  vertical-align: middle;
}
.stack-scope .text-2xl,
.stack-scope.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.stack-scope .text-3xl,
.stack-scope.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.stack-scope .text-\[0\.8rem\],
.stack-scope.text-\[0\.8rem\] {
  font-size: 0.8rem;
}
.stack-scope .text-lg,
.stack-scope.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.stack-scope .text-sm,
.stack-scope.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.stack-scope .text-xl,
.stack-scope.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.stack-scope .text-xs,
.stack-scope.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.stack-scope .font-bold,
.stack-scope.font-bold {
  font-weight: 700;
}
.stack-scope .font-medium,
.stack-scope.font-medium {
  font-weight: 500;
}
.stack-scope .font-normal,
.stack-scope.font-normal {
  font-weight: 400;
}
.stack-scope .font-semibold,
.stack-scope.font-semibold {
  font-weight: 600;
}
.stack-scope .uppercase,
.stack-scope.uppercase {
  text-transform: uppercase;
}
.stack-scope .capitalize,
.stack-scope.capitalize {
  text-transform: capitalize;
}
.stack-scope .leading-6,
.stack-scope.leading-6 {
  line-height: 1.5rem;
}
.stack-scope .leading-\[0\],
.stack-scope.leading-\[0\] {
  line-height: 0;
}
.stack-scope .leading-none,
.stack-scope.leading-none {
  line-height: 1;
}
.stack-scope .tracking-tight,
.stack-scope.tracking-tight {
  letter-spacing: -0.025em;
}
.stack-scope .tracking-widest,
.stack-scope.tracking-widest {
  letter-spacing: 0.1em;
}
.stack-scope .text-accent-foreground,
.stack-scope.text-accent-foreground {
  color: hsl(var(--accent-foreground));
}
.stack-scope .text-black,
.stack-scope.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.stack-scope .text-card-foreground,
.stack-scope.text-card-foreground {
  color: hsl(var(--card-foreground));
}
.stack-scope .text-current,
.stack-scope.text-current {
  color: currentColor;
}
.stack-scope .text-destructive,
.stack-scope.text-destructive {
  color: hsl(var(--destructive));
}
.stack-scope .text-destructive-foreground,
.stack-scope.text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}
.stack-scope .text-foreground,
.stack-scope.text-foreground {
  color: hsl(var(--foreground));
}
.stack-scope .text-foreground\/50,
.stack-scope.text-foreground\/50 {
  color: hsl(var(--foreground) / 0.5);
}
.stack-scope .text-gray-500,
.stack-scope.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.stack-scope .text-gray-600,
.stack-scope.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
.stack-scope .text-gray-700,
.stack-scope.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
.stack-scope .text-green-500,
.stack-scope.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}
.stack-scope .text-muted-foreground,
.stack-scope.text-muted-foreground {
  color: hsl(var(--muted-foreground));
}
.stack-scope .text-muted-foreground\/70,
.stack-scope.text-muted-foreground\/70 {
  color: hsl(var(--muted-foreground) / 0.7);
}
.stack-scope .text-popover-foreground,
.stack-scope.text-popover-foreground {
  color: hsl(var(--popover-foreground));
}
.stack-scope .text-primary,
.stack-scope.text-primary {
  color: hsl(var(--primary));
}
.stack-scope .text-primary-foreground,
.stack-scope.text-primary-foreground {
  color: hsl(var(--primary-foreground));
}
.stack-scope .text-red-500,
.stack-scope.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}
.stack-scope .text-red-600,
.stack-scope.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}
.stack-scope .text-secondary-foreground,
.stack-scope.text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}
.stack-scope .text-success,
.stack-scope.text-success {
  color: hsl(var(--success));
}
.stack-scope .text-success-foreground,
.stack-scope.text-success-foreground {
  color: hsl(var(--success-foreground));
}
.stack-scope .text-white,
.stack-scope.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.stack-scope .text-zinc-500,
.stack-scope.text-zinc-500 {
  --tw-text-opacity: 1;
  color: rgb(113 113 122 / var(--tw-text-opacity));
}
.stack-scope .text-zinc-600,
.stack-scope.text-zinc-600 {
  --tw-text-opacity: 1;
  color: rgb(82 82 91 / var(--tw-text-opacity));
}
.stack-scope .text-zinc-700,
.stack-scope.text-zinc-700 {
  --tw-text-opacity: 1;
  color: rgb(63 63 70 / var(--tw-text-opacity));
}
.stack-scope .text-zinc-800,
.stack-scope.text-zinc-800 {
  --tw-text-opacity: 1;
  color: rgb(39 39 42 / var(--tw-text-opacity));
}
.stack-scope .underline,
.stack-scope.underline {
  text-decoration-line: underline;
}
.stack-scope .underline-offset-4,
.stack-scope.underline-offset-4 {
  text-underline-offset: 4px;
}
.stack-scope .opacity-0,
.stack-scope.opacity-0 {
  opacity: 0;
}
.stack-scope .opacity-50,
.stack-scope.opacity-50 {
  opacity: 0.5;
}
.stack-scope .opacity-60,
.stack-scope.opacity-60 {
  opacity: 0.6;
}
.stack-scope .opacity-70,
.stack-scope.opacity-70 {
  opacity: 0.7;
}
.stack-scope .opacity-90,
.stack-scope.opacity-90 {
  opacity: 0.9;
}
.stack-scope .shadow,
.stack-scope.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .shadow-2xl,
.stack-scope.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .shadow-lg,
.stack-scope.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .shadow-md,
.stack-scope.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),
    0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .shadow-sm,
.stack-scope.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .outline-none,
.stack-scope.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.stack-scope .outline,
.stack-scope.outline {
  outline-style: solid;
}
.stack-scope .ring,
.stack-scope.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .ring-0,
.stack-scope.ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .ring-1,
.stack-scope.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .ring-ring,
.stack-scope.ring-ring {
  --tw-ring-color: hsl(var(--ring));
}
.stack-scope .ring-offset-background,
.stack-scope.ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}
.stack-scope .filter,
.stack-scope.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}
.stack-scope .backdrop-blur-sm,
.stack-scope.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
    var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
    var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
    var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
    var(--tw-backdrop-sepia);
}
.stack-scope .transition,
.stack-scope.transition {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.stack-scope .transition-all,
.stack-scope.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.stack-scope .transition-colors,
.stack-scope.transition-colors {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.stack-scope .transition-opacity,
.stack-scope.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.stack-scope .transition-transform,
.stack-scope.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.stack-scope .duration-100,
.stack-scope.duration-100 {
  transition-duration: 100ms;
}
.stack-scope .duration-1000,
.stack-scope.duration-1000 {
  transition-duration: 1000ms;
}
.stack-scope .duration-200,
.stack-scope.duration-200 {
  transition-duration: 200ms;
}
.stack-scope .duration-300,
.stack-scope.duration-300 {
  transition-duration: 300ms;
}
.stack-scope .ease-in-out,
.stack-scope.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}
.stack-scope .animate-in,
.stack-scope.animate-in {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.stack-scope .fade-in-0,
.stack-scope.fade-in-0 {
  --tw-enter-opacity: 0;
}
.stack-scope .zoom-in-95,
.stack-scope.zoom-in-95 {
  --tw-enter-scale: 0.95;
}
.stack-scope .duration-100,
.stack-scope.duration-100 {
  animation-duration: 100ms;
}
.stack-scope .duration-1000,
.stack-scope.duration-1000 {
  animation-duration: 1000ms;
}
.stack-scope .duration-200,
.stack-scope.duration-200 {
  animation-duration: 200ms;
}
.stack-scope .duration-300,
.stack-scope.duration-300 {
  animation-duration: 300ms;
}
.stack-scope .ease-in-out,
.stack-scope.ease-in-out {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.stack-scope .running,
.stack-scope.running {
  animation-play-state: running;
}
.stack-scope *,
*.stack-scope {
  border-color: hsl(var(--border));
}
.stack-scope * .hide-password-toggle::-ms-reveal,
.stack-scope * .hide-password-toggle::-ms-clear,
*.stack-scope .hide-password-toggle::-ms-reveal,
*.stack-scope .hide-password-toggle::-ms-clear {
  visibility: hidden;
  pointer-events: none;
  display: none;
}
.stack-scope .file\:border-0::file-selector-button,
.stack-scope.file\:border-0::file-selector-button {
  border-width: 0px;
}
.stack-scope .file\:bg-transparent::file-selector-button,
.stack-scope.file\:bg-transparent::file-selector-button {
  background-color: transparent;
}
.stack-scope .file\:text-sm::file-selector-button,
.stack-scope.file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.stack-scope .file\:font-medium::file-selector-button,
.stack-scope.file\:font-medium::file-selector-button {
  font-weight: 500;
}
.stack-scope .placeholder\:text-muted-foreground::-moz-placeholder,
.stack-scope.placeholder\:text-muted-foreground::-moz-placeholder {
  color: hsl(var(--muted-foreground));
}
.stack-scope .placeholder\:text-muted-foreground::placeholder,
.stack-scope.placeholder\:text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}
.stack-scope .focus-within\:relative:focus-within,
.stack-scope.focus-within\:relative:focus-within {
  position: relative;
}
.stack-scope .focus-within\:z-20:focus-within,
.stack-scope.focus-within\:z-20:focus-within {
  z-index: 20;
}
.stack-scope .hover\:bg-accent:hover,
.stack-scope.hover\:bg-accent:hover {
  background-color: hsl(var(--accent));
}
.stack-scope .hover\:bg-destructive\/90:hover,
.stack-scope.hover\:bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}
.stack-scope .hover\:bg-muted:hover,
.stack-scope.hover\:bg-muted:hover {
  background-color: hsl(var(--muted));
}
.stack-scope .hover\:bg-muted\/50:hover,
.stack-scope.hover\:bg-muted\/50:hover {
  background-color: hsl(var(--muted) / 0.5);
}
.stack-scope .hover\:bg-primary:hover,
.stack-scope.hover\:bg-primary:hover {
  background-color: hsl(var(--primary));
}
.stack-scope .hover\:bg-primary\/90:hover,
.stack-scope.hover\:bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}
.stack-scope .hover\:bg-secondary:hover,
.stack-scope.hover\:bg-secondary:hover {
  background-color: hsl(var(--secondary));
}
.stack-scope .hover\:bg-secondary\/80:hover,
.stack-scope.hover\:bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}
.stack-scope .hover\:bg-transparent:hover,
.stack-scope.hover\:bg-transparent:hover {
  background-color: transparent;
}
.stack-scope .hover\:text-accent-foreground:hover,
.stack-scope.hover\:text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}
.stack-scope .hover\:text-foreground:hover,
.stack-scope.hover\:text-foreground:hover {
  color: hsl(var(--foreground));
}
.stack-scope .hover\:text-muted-foreground:hover,
.stack-scope.hover\:text-muted-foreground:hover {
  color: hsl(var(--muted-foreground));
}
.stack-scope .hover\:text-primary-foreground:hover,
.stack-scope.hover\:text-primary-foreground:hover {
  color: hsl(var(--primary-foreground));
}
.stack-scope .hover\:underline:hover,
.stack-scope.hover\:underline:hover {
  text-decoration-line: underline;
}
.stack-scope .hover\:opacity-100:hover,
.stack-scope.hover\:opacity-100:hover {
  opacity: 1;
}
.stack-scope .focus\:bg-accent:focus,
.stack-scope.focus\:bg-accent:focus {
  background-color: hsl(var(--accent));
}
.stack-scope .focus\:bg-primary:focus,
.stack-scope.focus\:bg-primary:focus {
  background-color: hsl(var(--primary));
}
.stack-scope .focus\:text-accent-foreground:focus,
.stack-scope.focus\:text-accent-foreground:focus {
  color: hsl(var(--accent-foreground));
}
.stack-scope .focus\:text-primary-foreground:focus,
.stack-scope.focus\:text-primary-foreground:focus {
  color: hsl(var(--primary-foreground));
}
.stack-scope .focus\:opacity-100:focus,
.stack-scope.focus\:opacity-100:focus {
  opacity: 1;
}
.stack-scope .focus\:outline-none:focus,
.stack-scope.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.stack-scope .focus\:ring-1:focus,
.stack-scope.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .focus\:ring-2:focus,
.stack-scope.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .focus\:ring-ring:focus,
.stack-scope.focus\:ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}
.stack-scope .focus\:ring-offset-2:focus,
.stack-scope.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}
.stack-scope .focus-visible\:outline-none:focus-visible,
.stack-scope.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.stack-scope .focus-visible\:ring-1:focus-visible,
.stack-scope.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .focus-visible\:ring-2:focus-visible,
.stack-scope.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.stack-scope .focus-visible\:ring-ring:focus-visible,
.stack-scope.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}
.stack-scope .focus-visible\:ring-offset-2:focus-visible,
.stack-scope.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}
.stack-scope .focus-visible\:ring-offset-background:focus-visible,
.stack-scope.focus-visible\:ring-offset-background:focus-visible {
  --tw-ring-offset-color: hsl(var(--background));
}
.stack-scope .disabled\:pointer-events-none:disabled,
.stack-scope.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}
.stack-scope .disabled\:cursor-not-allowed:disabled,
.stack-scope.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}
.stack-scope .disabled\:opacity-50:disabled,
.stack-scope.disabled\:opacity-50:disabled {
  opacity: 0.5;
}
.stack-scope .group:hover .group-hover\:opacity-100,
.stack-scope.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}
.stack-scope .group.destructive .group-\[\.destructive\]\:border-muted\/40,
.stack-scope.group.destructive .group-\[\.destructive\]\:border-muted\/40 {
  border-color: hsl(var(--muted) / 0.4);
}
.stack-scope .group.destructive .group-\[\.destructive\]\:text-red-300,
.stack-scope.group.destructive .group-\[\.destructive\]\:text-red-300 {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity));
}
.stack-scope .group.success .group-\[\.success\]\:text-green-300,
.stack-scope.group.success .group-\[\.success\]\:text-green-300 {
  --tw-text-opacity: 1;
  color: rgb(134 239 172 / var(--tw-text-opacity));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:hover\:border-destructive\/30:hover,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:hover\:border-destructive\/30:hover {
  border-color: hsl(var(--destructive) / 0.3);
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:hover\:bg-destructive:hover,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:hover\:bg-destructive:hover {
  background-color: hsl(var(--destructive));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:hover\:text-destructive-foreground:hover,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:hover\:text-destructive-foreground:hover {
  color: hsl(var(--destructive-foreground));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:hover\:text-red-50:hover,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:hover\:text-red-50:hover {
  --tw-text-opacity: 1;
  color: rgb(254 242 242 / var(--tw-text-opacity));
}
.stack-scope .group.success .group-\[\.success\]\:hover\:text-green-50:hover,
.stack-scope.group.success .group-\[\.success\]\:hover\:text-green-50:hover {
  --tw-text-opacity: 1;
  color: rgb(240 253 244 / var(--tw-text-opacity));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:focus\:ring-destructive:focus,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:focus\:ring-destructive:focus {
  --tw-ring-color: hsl(var(--destructive));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:focus\:ring-red-400:focus,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:focus\:ring-red-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity));
}
.stack-scope .group.success .group-\[\.success\]\:focus\:ring-green-400:focus,
.stack-scope.group.success .group-\[\.success\]\:focus\:ring-green-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(74 222 128 / var(--tw-ring-opacity));
}
.stack-scope
  .group.destructive
  .group-\[\.destructive\]\:focus\:ring-offset-red-600:focus,
.stack-scope.group.destructive
  .group-\[\.destructive\]\:focus\:ring-offset-red-600:focus {
  --tw-ring-offset-color: #dc2626;
}
.stack-scope
  .group.success
  .group-\[\.success\]\:focus\:ring-offset-green-600:focus,
.stack-scope.group.success
  .group-\[\.success\]\:focus\:ring-offset-green-600:focus {
  --tw-ring-offset-color: #16a34a;
}
.stack-scope .peer:disabled ~ .peer-disabled\:cursor-not-allowed,
.stack-scope.peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}
.stack-scope .peer:disabled ~ .peer-disabled\:opacity-70,
.stack-scope.peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}
.stack-scope .has-\[\:disabled\]\:opacity-50:has(:disabled),
.stack-scope.has-\[\:disabled\]\:opacity-50:has(:disabled) {
  opacity: 0.5;
}
.stack-scope .aria-selected\:bg-accent[aria-selected="true"],
.stack-scope.aria-selected\:bg-accent[aria-selected="true"] {
  background-color: hsl(var(--accent));
}
.stack-scope .aria-selected\:bg-accent\/50[aria-selected="true"],
.stack-scope.aria-selected\:bg-accent\/50[aria-selected="true"] {
  background-color: hsl(var(--accent) / 0.5);
}
.stack-scope .aria-selected\:text-accent-foreground[aria-selected="true"],
.stack-scope.aria-selected\:text-accent-foreground[aria-selected="true"] {
  color: hsl(var(--accent-foreground));
}
.stack-scope .aria-selected\:text-muted-foreground[aria-selected="true"],
.stack-scope.aria-selected\:text-muted-foreground[aria-selected="true"] {
  color: hsl(var(--muted-foreground));
}
.stack-scope .aria-selected\:opacity-100[aria-selected="true"],
.stack-scope.aria-selected\:opacity-100[aria-selected="true"] {
  opacity: 1;
}
.stack-scope .aria-selected\:opacity-30[aria-selected="true"],
.stack-scope.aria-selected\:opacity-30[aria-selected="true"] {
  opacity: 0.3;
}
.stack-scope
  .data-\[disabled\=true\]\:pointer-events-none[data-disabled="true"],
.stack-scope.data-\[disabled\=true\]\:pointer-events-none[data-disabled="true"] {
  pointer-events: none;
}
.stack-scope .data-\[disabled\]\:pointer-events-none[data-disabled],
.stack-scope.data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}
.stack-scope .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"],
.stack-scope.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[side\=left\]\:-translate-x-1[data-side="left"],
.stack-scope.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[side\=right\]\:translate-x-1[data-side="right"],
.stack-scope.data-\[side\=right\]\:translate-x-1[data-side="right"] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[side\=top\]\:-translate-y-1[data-side="top"],
.stack-scope.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[state\=checked\]\:translate-x-4[data-state="checked"],
.stack-scope.data-\[state\=checked\]\:translate-x-4[data-state="checked"] {
  --tw-translate-x: 1rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"],
.stack-scope.data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .data-\[swipe\=cancel\]\:translate-x-0[data-swipe="cancel"],
.stack-scope.data-\[swipe\=cancel\]\:translate-x-0[data-swipe="cancel"] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope
  .data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe="end"],
.stack-scope.data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe="end"] {
  --tw-translate-x: var(--radix-toast-swipe-end-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope
  .data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe="move"],
.stack-scope.data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe="move"] {
  --tw-translate-x: var(--radix-toast-swipe-move-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    height: 0;
  }
}
.stack-scope .data-\[state\=closed\]\:animate-accordion-up[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
  animation: accordion-up 0.2s ease-out;
}
@keyframes accordion-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}
.stack-scope .data-\[state\=open\]\:animate-accordion-down[data-state="open"],
.stack-scope.data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
  animation: accordion-down 0.2s ease-out;
}
.stack-scope .data-\[active\]\:bg-accent\/50[data-active],
.stack-scope.data-\[active\]\:bg-accent\/50[data-active] {
  background-color: hsl(var(--accent) / 0.5);
}
.stack-scope .data-\[state\=active\]\:bg-background[data-state="active"],
.stack-scope.data-\[state\=active\]\:bg-background[data-state="active"] {
  background-color: hsl(var(--background));
}
.stack-scope .data-\[state\=checked\]\:bg-primary[data-state="checked"],
.stack-scope.data-\[state\=checked\]\:bg-primary[data-state="checked"] {
  background-color: hsl(var(--primary));
}
.stack-scope .data-\[state\=on\]\:bg-accent[data-state="on"],
.stack-scope.data-\[state\=on\]\:bg-accent[data-state="on"] {
  background-color: hsl(var(--accent));
}
.stack-scope .data-\[state\=open\]\:bg-accent[data-state="open"],
.stack-scope.data-\[state\=open\]\:bg-accent[data-state="open"] {
  background-color: hsl(var(--accent));
}
.stack-scope .data-\[state\=open\]\:bg-accent\/50[data-state="open"],
.stack-scope.data-\[state\=open\]\:bg-accent\/50[data-state="open"] {
  background-color: hsl(var(--accent) / 0.5);
}
.stack-scope .data-\[state\=open\]\:bg-muted[data-state="open"],
.stack-scope.data-\[state\=open\]\:bg-muted[data-state="open"] {
  background-color: hsl(var(--muted));
}
.stack-scope .data-\[state\=open\]\:bg-secondary[data-state="open"],
.stack-scope.data-\[state\=open\]\:bg-secondary[data-state="open"] {
  background-color: hsl(var(--secondary));
}
.stack-scope .data-\[state\=selected\]\:bg-muted[data-state="selected"],
.stack-scope.data-\[state\=selected\]\:bg-muted[data-state="selected"] {
  background-color: hsl(var(--muted));
}
.stack-scope .data-\[state\=unchecked\]\:bg-input[data-state="unchecked"],
.stack-scope.data-\[state\=unchecked\]\:bg-input[data-state="unchecked"] {
  background-color: hsl(var(--input));
}
.stack-scope .data-\[state\=active\]\:text-foreground[data-state="active"],
.stack-scope.data-\[state\=active\]\:text-foreground[data-state="active"] {
  color: hsl(var(--foreground));
}
.stack-scope
  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"],
.stack-scope.data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
  color: hsl(var(--primary-foreground));
}
.stack-scope .data-\[state\=on\]\:text-accent-foreground[data-state="on"],
.stack-scope.data-\[state\=on\]\:text-accent-foreground[data-state="on"] {
  color: hsl(var(--accent-foreground));
}
.stack-scope .data-\[state\=open\]\:text-accent-foreground[data-state="open"],
.stack-scope.data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
  color: hsl(var(--accent-foreground));
}
.stack-scope .data-\[state\=open\]\:text-muted-foreground[data-state="open"],
.stack-scope.data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
  color: hsl(var(--muted-foreground));
}
.stack-scope .data-\[disabled\=true\]\:opacity-50[data-disabled="true"],
.stack-scope.data-\[disabled\=true\]\:opacity-50[data-disabled="true"] {
  opacity: 0.5;
}
.stack-scope .data-\[disabled\]\:opacity-50[data-disabled],
.stack-scope.data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}
.stack-scope .data-\[state\=active\]\:shadow-sm[data-state="active"],
.stack-scope.data-\[state\=active\]\:shadow-sm[data-state="active"] {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.stack-scope .data-\[swipe\=move\]\:transition-none[data-swipe="move"],
.stack-scope.data-\[swipe\=move\]\:transition-none[data-swipe="move"] {
  transition-property: none;
}
.stack-scope .data-\[state\=closed\]\:duration-100[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:duration-100[data-state="closed"] {
  transition-duration: 100ms;
}
.stack-scope .data-\[state\=open\]\:duration-100[data-state="open"],
.stack-scope.data-\[state\=open\]\:duration-100[data-state="open"] {
  transition-duration: 100ms;
}
.stack-scope .data-\[motion\^\=from-\]\:animate-in[data-motion^="from-"],
.stack-scope.data-\[motion\^\=from-\]\:animate-in[data-motion^="from-"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.stack-scope .data-\[state\=open\]\:animate-in[data-state="open"],
.stack-scope.data-\[state\=open\]\:animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.stack-scope .data-\[state\=visible\]\:animate-in[data-state="visible"],
.stack-scope.data-\[state\=visible\]\:animate-in[data-state="visible"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}
.stack-scope .data-\[motion\^\=to-\]\:animate-out[data-motion^="to-"],
.stack-scope.data-\[motion\^\=to-\]\:animate-out[data-motion^="to-"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.stack-scope .data-\[state\=closed\]\:animate-out[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.stack-scope .data-\[state\=hidden\]\:animate-out[data-state="hidden"],
.stack-scope.data-\[state\=hidden\]\:animate-out[data-state="hidden"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.stack-scope .data-\[swipe\=end\]\:animate-out[data-swipe="end"],
.stack-scope.data-\[swipe\=end\]\:animate-out[data-swipe="end"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}
.stack-scope .data-\[motion\^\=from-\]\:fade-in[data-motion^="from-"],
.stack-scope.data-\[motion\^\=from-\]\:fade-in[data-motion^="from-"] {
  --tw-enter-opacity: 0;
}
.stack-scope .data-\[motion\^\=to-\]\:fade-out[data-motion^="to-"],
.stack-scope.data-\[motion\^\=to-\]\:fade-out[data-motion^="to-"] {
  --tw-exit-opacity: 0;
}
.stack-scope .data-\[state\=closed\]\:fade-out-0[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}
.stack-scope .data-\[state\=closed\]\:fade-out-80[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:fade-out-80[data-state="closed"] {
  --tw-exit-opacity: 0.8;
}
.stack-scope .data-\[state\=hidden\]\:fade-out[data-state="hidden"],
.stack-scope.data-\[state\=hidden\]\:fade-out[data-state="hidden"] {
  --tw-exit-opacity: 0;
}
.stack-scope .data-\[state\=open\]\:fade-in-0[data-state="open"],
.stack-scope.data-\[state\=open\]\:fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}
.stack-scope .data-\[state\=visible\]\:fade-in[data-state="visible"],
.stack-scope.data-\[state\=visible\]\:fade-in[data-state="visible"] {
  --tw-enter-opacity: 0;
}
.stack-scope .data-\[state\=closed\]\:zoom-out-95[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
  --tw-exit-scale: 0.95;
}
.stack-scope .data-\[state\=open\]\:zoom-in-90[data-state="open"],
.stack-scope.data-\[state\=open\]\:zoom-in-90[data-state="open"] {
  --tw-enter-scale: 0.9;
}
.stack-scope .data-\[state\=open\]\:zoom-in-95[data-state="open"],
.stack-scope.data-\[state\=open\]\:zoom-in-95[data-state="open"] {
  --tw-enter-scale: 0.95;
}
.stack-scope
  .data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion="from-end"],
.stack-scope.data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion="from-end"] {
  --tw-enter-translate-x: 13rem;
}
.stack-scope
  .data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion="from-start"],
.stack-scope.data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion="from-start"] {
  --tw-enter-translate-x: -13rem;
}
.stack-scope
  .data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion="to-end"],
.stack-scope.data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion="to-end"] {
  --tw-exit-translate-x: 13rem;
}
.stack-scope
  .data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion="to-start"],
.stack-scope.data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion="to-start"] {
  --tw-exit-translate-x: -13rem;
}
.stack-scope .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"],
.stack-scope.data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
  --tw-enter-translate-y: -0.5rem;
}
.stack-scope .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"],
.stack-scope.data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
  --tw-enter-translate-x: 0.5rem;
}
.stack-scope .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"],
.stack-scope.data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
  --tw-enter-translate-x: -0.5rem;
}
.stack-scope .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"],
.stack-scope.data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
  --tw-enter-translate-y: 0.5rem;
}
.stack-scope .data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
  --tw-exit-translate-y: 100%;
}
.stack-scope .data-\[state\=closed\]\:slide-out-to-left[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
  --tw-exit-translate-x: -100%;
}
.stack-scope
  .data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}
.stack-scope .data-\[state\=closed\]\:slide-out-to-right[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
  --tw-exit-translate-x: 100%;
}
.stack-scope
  .data-\[state\=closed\]\:slide-out-to-right-full[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-right-full[data-state="closed"] {
  --tw-exit-translate-x: 100%;
}
.stack-scope .data-\[state\=closed\]\:slide-out-to-top[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
  --tw-exit-translate-y: -100%;
}
.stack-scope
  .data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state="closed"],
.stack-scope.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-bottom[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
  --tw-enter-translate-y: 100%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-left[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
  --tw-enter-translate-x: -100%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-left-1\/2[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-right[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
  --tw-enter-translate-x: 100%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-top[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
  --tw-enter-translate-y: -100%;
}
.stack-scope
  .data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}
.stack-scope .data-\[state\=open\]\:slide-in-from-top-full[data-state="open"],
.stack-scope.data-\[state\=open\]\:slide-in-from-top-full[data-state="open"] {
  --tw-enter-translate-y: -100%;
}
.stack-scope .data-\[state\=closed\]\:duration-100[data-state="closed"],
.stack-scope.data-\[state\=closed\]\:duration-100[data-state="closed"] {
  animation-duration: 100ms;
}
.stack-scope .data-\[state\=open\]\:duration-100[data-state="open"],
.stack-scope.data-\[state\=open\]\:duration-100[data-state="open"] {
  animation-duration: 100ms;
}
.stack-scope .group[data-state="open"] .group-data-\[state\=open\]\:rotate-180,
.stack-scope.group[data-state="open"] .group-data-\[state\=open\]\:rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@media (min-width: 640px) {
  .stack-scope .sm\:bottom-0,
  .stack-scope.sm\:bottom-0 {
    bottom: 0px;
  }

  .stack-scope .sm\:right-0,
  .stack-scope.sm\:right-0 {
    right: 0px;
  }

  .stack-scope .sm\:top-auto,
  .stack-scope.sm\:top-auto {
    top: auto;
  }

  .stack-scope .sm\:flex,
  .stack-scope.sm\:flex {
    display: flex;
  }

  .stack-scope .sm\:hidden,
  .stack-scope.sm\:hidden {
    display: none;
  }

  .stack-scope .sm\:max-w-sm,
  .stack-scope.sm\:max-w-sm {
    max-width: 24rem;
  }

  .stack-scope .sm\:flex-1,
  .stack-scope.sm\:flex-1 {
    flex: 1 1 0%;
  }

  .stack-scope .sm\:flex-row,
  .stack-scope.sm\:flex-row {
    flex-direction: row;
  }

  .stack-scope .sm\:flex-col,
  .stack-scope.sm\:flex-col {
    flex-direction: column;
  }

  .stack-scope .sm\:items-end,
  .stack-scope.sm\:items-end {
    align-items: flex-end;
  }

  .stack-scope .sm\:justify-end,
  .stack-scope.sm\:justify-end {
    justify-content: flex-end;
  }

  .stack-scope .sm\:gap-2\.5,
  .stack-scope.sm\:gap-2\.5 {
    gap: 0.625rem;
  }

  .stack-scope .sm\:gap-y-0,
  .stack-scope.sm\:gap-y-0 {
    row-gap: 0px;
  }

  .stack-scope .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]),
  .stack-scope.sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .stack-scope .sm\:space-x-4 > :not([hidden]) ~ :not([hidden]),
  .stack-scope.sm\:space-x-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .stack-scope .sm\:space-y-0 > :not([hidden]) ~ :not([hidden]),
  .stack-scope.sm\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .stack-scope .sm\:rounded-lg,
  .stack-scope.sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .stack-scope .sm\:bg-muted,
  .stack-scope.sm\:bg-muted {
    background-color: hsl(var(--muted));
  }

  .stack-scope .sm\:text-left,
  .stack-scope.sm\:text-left {
    text-align: left;
  }

  .stack-scope
    .data-\[state\=open\]\:sm\:slide-in-from-bottom-full[data-state="open"],
  .stack-scope.data-\[state\=open\]\:sm\:slide-in-from-bottom-full[data-state="open"] {
    --tw-enter-translate-y: 100%;
  }
}
@media (min-width: 768px) {
  .stack-scope .md\:absolute,
  .stack-scope.md\:absolute {
    position: absolute;
  }

  .stack-scope .md\:w-\[90\%\],
  .stack-scope.md\:w-\[90\%\] {
    width: 90%;
  }

  .stack-scope .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\],
  .stack-scope.md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
    width: var(--radix-navigation-menu-viewport-width);
  }

  .stack-scope .md\:w-auto,
  .stack-scope.md\:w-auto {
    width: auto;
  }

  .stack-scope .md\:max-w-\[420px\],
  .stack-scope.md\:max-w-\[420px\] {
    max-width: 420px;
  }

  .stack-scope .md\:flex-row,
  .stack-scope.md\:flex-row {
    flex-direction: row;
  }

  .stack-scope .md\:justify-end,
  .stack-scope.md\:justify-end {
    justify-content: flex-end;
  }

  .stack-scope .md\:gap-4,
  .stack-scope.md\:gap-4 {
    gap: 1rem;
  }
}
@media (min-width: 1024px) {
  .stack-scope .lg\:flex,
  .stack-scope.lg\:flex {
    display: flex;
  }

  .stack-scope .lg\:hidden,
  .stack-scope.lg\:hidden {
    display: none;
  }

  .stack-scope .lg\:gap-x-8,
  .stack-scope.lg\:gap-x-8 {
    -moz-column-gap: 2rem;
    column-gap: 2rem;
  }

  .stack-scope .lg\:px-3,
  .stack-scope.lg\:px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}
.stack-scope
  .dark\:border-destructive:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:border-destructive:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  border-color: hsl(var(--destructive));
}
.stack-scope
  .dark\:border-gray-600:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:border-gray-600:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}
.stack-scope
  .dark\:border-success:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:border-success:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  border-color: hsl(var(--success));
}
.stack-scope
  .dark\:bg-black:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:bg-black:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.stack-scope
  .dark\:bg-gray-500:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:bg-gray-500:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
.stack-scope
  .dark\:bg-gray-700:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:bg-gray-700:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
.stack-scope
  .dark\:bg-gray-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:bg-gray-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}
.stack-scope
  .dark\:bg-zinc-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:bg-zinc-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity));
}
.stack-scope
  .dark\:text-foreground:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-foreground:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  color: hsl(var(--foreground));
}
.stack-scope
  .dark\:text-gray-300:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-gray-300:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}
.stack-scope
  .dark\:text-gray-400:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-gray-400:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
.stack-scope
  .dark\:text-white:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-white:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.stack-scope
  .dark\:text-zinc-300:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-zinc-300:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(212 212 216 / var(--tw-text-opacity));
}
.stack-scope
  .dark\:text-zinc-400:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-zinc-400:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(161 161 170 / var(--tw-text-opacity));
}
.stack-scope
  .dark\:text-zinc-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ),
.stack-scope.dark\:text-zinc-800:where(
    html:has(head > [data-stack-theme="dark"]),
    html:has(head > [data-stack-theme="dark"]) *
  ) {
  --tw-text-opacity: 1;
  color: rgb(39 39 42 / var(--tw-text-opacity));
}
.stack-scope .\[\&\+div\]\:text-xs + div,
.stack-scope.\[\&\+div\]\:text-xs + div {
  font-size: 0.75rem;
  line-height: 1rem;
}
.stack-scope
  .\[\&\:has\(\>\.day-range-end\)\]\:rounded-r-md:has(> .day-range-end),
.stack-scope.\[\&\:has\(\>\.day-range-end\)\]\:rounded-r-md:has(
    > .day-range-end
  ) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}
.stack-scope
  .\[\&\:has\(\>\.day-range-start\)\]\:rounded-l-md:has(> .day-range-start),
.stack-scope.\[\&\:has\(\>\.day-range-start\)\]\:rounded-l-md:has(
    > .day-range-start
  ) {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}
.stack-scope .\[\&\:has\(\[aria-selected\]\)\]\:rounded-md:has([aria-selected]),
.stack-scope.\[\&\:has\(\[aria-selected\]\)\]\:rounded-md:has([aria-selected]) {
  border-radius: calc(var(--radius) - 2px);
}
.stack-scope .\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]),
.stack-scope.\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]) {
  background-color: hsl(var(--accent));
}
.stack-scope
  .first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:has(
    [aria-selected]
  ):first-child,
.stack-scope.first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:has(
    [aria-selected]
  ):first-child {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}
.stack-scope
  .last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:has(
    [aria-selected]
  ):last-child,
.stack-scope.last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:has(
    [aria-selected]
  ):last-child {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}
.stack-scope
  .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has(
    [aria-selected].day-outside
  ),
.stack-scope.\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has(
    [aria-selected].day-outside
  ) {
  background-color: hsl(var(--accent) / 0.5);
}
.stack-scope
  .\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has(
    [aria-selected].day-range-end
  ),
.stack-scope.\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has(
    [aria-selected].day-range-end
  ) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}
.stack-scope .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]),
.stack-scope.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]) {
  padding-right: 0px;
}
.stack-scope
  .\[\&\>\:not\(\.stack-button-do-not-hide-when-siblings-are\)\]\:invisible
  > :not(.stack-button-do-not-hide-when-siblings-are),
.stack-scope.\[\&\>\:not\(\.stack-button-do-not-hide-when-siblings-are\)\]\:invisible
  > :not(.stack-button-do-not-hide-when-siblings-are) {
  visibility: hidden;
}
.stack-scope
  .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\]
  > [role="checkbox"],
.stack-scope.\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\]
  > [role="checkbox"] {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .\[\&\>button\]\:hidden > button,
.stack-scope.\[\&\>button\]\:hidden > button {
  display: none;
}
.stack-scope .\[\&\>span\]\:line-clamp-1 > span,
.stack-scope.\[\&\>span\]\:line-clamp-1 > span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
.stack-scope .\[\&\>svg\+div\]\:translate-y-\[-3px\] > svg + div,
.stack-scope.\[\&\>svg\+div\]\:translate-y-\[-3px\] > svg + div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .\[\&\>svg\]\:absolute > svg,
.stack-scope.\[\&\>svg\]\:absolute > svg {
  position: absolute;
}
.stack-scope .\[\&\>svg\]\:left-4 > svg,
.stack-scope.\[\&\>svg\]\:left-4 > svg {
  left: 1rem;
}
.stack-scope .\[\&\>svg\]\:top-4 > svg,
.stack-scope.\[\&\>svg\]\:top-4 > svg {
  top: 1rem;
}
.stack-scope .\[\&\>svg\]\:size-3\.5 > svg,
.stack-scope.\[\&\>svg\]\:size-3\.5 > svg {
  width: 0.875rem;
  height: 0.875rem;
}
.stack-scope .\[\&\>svg\]\:text-destructive > svg,
.stack-scope.\[\&\>svg\]\:text-destructive > svg {
  color: hsl(var(--destructive));
}
.stack-scope .\[\&\>svg\]\:text-foreground > svg,
.stack-scope.\[\&\>svg\]\:text-foreground > svg {
  color: hsl(var(--foreground));
}
.stack-scope .\[\&\>svg\]\:text-success > svg,
.stack-scope.\[\&\>svg\]\:text-success > svg {
  color: hsl(var(--success));
}
.stack-scope .\[\&\>svg\~\*\]\:pl-7 > svg ~ *,
.stack-scope.\[\&\>svg\~\*\]\:pl-7 > svg ~ * {
  padding-left: 1.75rem;
}
.stack-scope .\[\&\>tr\]\:last\:border-b-0:last-child > tr,
.stack-scope.\[\&\>tr\]\:last\:border-b-0:last-child > tr {
  border-bottom-width: 0px;
}
.stack-scope
  .\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state="open"]
  > svg,
.stack-scope.\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state="open"]
  > svg {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.stack-scope .\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading],
.stack-scope.\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.stack-scope .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading],
.stack-scope.\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.stack-scope .\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading],
.stack-scope.\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}
.stack-scope .\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading],
.stack-scope.\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading] {
  font-weight: 500;
}
.stack-scope
  .\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground
  [cmdk-group-heading],
.stack-scope.\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground
  [cmdk-group-heading] {
  color: hsl(var(--muted-foreground));
}
.stack-scope
  .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0
  [cmdk-group]:not([hidden])
  ~ [cmdk-group],
.stack-scope.\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0
  [cmdk-group]:not([hidden])
  ~ [cmdk-group] {
  padding-top: 0px;
}
.stack-scope .\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group],
.stack-scope.\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.stack-scope .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg,
.stack-scope.\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg {
  height: 1.25rem;
}
.stack-scope .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg,
.stack-scope.\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg {
  width: 1.25rem;
}
.stack-scope .\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input],
.stack-scope.\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input] {
  height: 3rem;
}
.stack-scope .\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item],
.stack-scope.\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.stack-scope .\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item],
.stack-scope.\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.stack-scope .\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg,
.stack-scope.\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg {
  height: 1.25rem;
}
.stack-scope .\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg,
.stack-scope.\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg {
  width: 1.25rem;
}
.stack-scope .\[\&_p\]\:leading-relaxed p,
.stack-scope.\[\&_p\]\:leading-relaxed p {
  line-height: 1.625;
}
.stack-scope .\[\&_svg\]\:invisible svg,
.stack-scope.\[\&_svg\]\:invisible svg {
  visibility: hidden;
}
.stack-scope .\[\&_tr\:last-child\]\:border-0 tr:last-child,
.stack-scope.\[\&_tr\:last-child\]\:border-0 tr:last-child {
  border-width: 0px;
}
.stack-scope .\[\&_tr\]\:border-b tr,
.stack-scope.\[\&_tr\]\:border-b tr {
  border-bottom-width: 1px;
}
.stack-scope {
  --background: 0 0% 100%;
  --foreground: 240 10% 3.9%;
  --card: 0 0% 100%;
  --card-foreground: 240 10% 3.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 240 10% 3.9%;
  --primary: 240 5.9% 10%;
  --primary-foreground: 0 0% 98%;
  --secondary: 240 4.8% 95.9%;
  --secondary-foreground: 240 5.9% 10%;
  --muted: 240 4.8% 95.9%;
  --muted-foreground: 240 3.8% 46.1%;
  --accent: 240 4.8% 95.9%;
  --accent-foreground: 240 5.9% 10%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 5.9% 90%;
  --input: 240 5.9% 90%;
  --ring: 240 10% 3.9%;
  --radius: 0.5rem;
}
html:has(head > [data-stack-theme="dark"]) .stack-scope {
  --background: 240 10% 3.9%;
  --foreground: 0 0% 98%;
  --card: 240 10% 3.9%;
  --card-foreground: 0 0% 98%;
  --popover: 240 10% 3.9%;
  --popover-foreground: 0 0% 98%;
  --primary: 0 0% 98%;
  --primary-foreground: 240 5.9% 10%;
  --secondary: 240 3.7% 15.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 240 3.7% 15.9%;
  --muted-foreground: 240 5% 64.9%;
  --accent: 240 3.7% 15.9%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 50%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 3.7% 15.9%;
  --input: 240 3.7% 15.9%;
  --ring: 240 4.9% 83.9%;
}
